---
variables:
  DOCKER_HUB_IMAGE: "${DOCKER_HUB_USERNAME}/${CI_PROJECT_NAME}"
  # renovate: datasource=docker depName=alpine
  ALPINE_VERSION: "3.21.2"
  # renovate: datasource=repology depName=alpine_3_21/openssh versioning=loose
  OPENSSH_VERSION: "9.9_p1-r2"
  # renovate: datasource=repology depName=alpine_3_21/rsync versioning=loose
  RSYNC_VERSION: "3.4.0-r0"

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

stages:
- test
- build

kaniko-check:
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  rules:
  - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
  script:
  - /kaniko/executor --build-arg="OPENSSH_VERSION=${OPENSSH_VERSION}" --build-arg="RSYNC_VERSION=${RSYNC_VERSION}" --context="${CI_PROJECT_DIR}" --dockerfile="${CI_PROJECT_DIR}/Dockerfile" --no-push
  - echo "Would publish new image ${CI_REGISTRY_IMAGE}:${RSYNC_VERSION%-*}.${CI_PIPELINE_IID}+alpine${ALPINE_VERSION}"
  - echo "Would publish new image ${DOCKER_HUB_IMAGE}:${RSYNC_VERSION%-*}.${CI_PIPELINE_IID}+alpine${ALPINE_VERSION}"
  stage: test
  tags:
  - kubernetes

kaniko:
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  rules:
  - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
  - mkdir --parents /kaniko/.docker
  - |
    echo "{
      \"auths\": {
        \"${CI_REGISTRY}\": {
          \"username\": \"${CI_REGISTRY_USER}\",
          \"password\": \"${CI_REGISTRY_PASSWORD}\"
        },
        \"${DOCKER_HUB_URL}\": {
          \"username\": \"${DOCKER_HUB_USERNAME}\",
          \"password\": \"${DOCKER_HUB_PASSWORD}\"
        }
      }
    }" > /kaniko/.docker/config.json
  - /kaniko/executor --build-arg="OPENSSH_VERSION=${OPENSSH_VERSION}" --build-arg="RSYNC_VERSION=${RSYNC_VERSION}" --context="${CI_PROJECT_DIR}" --destination="${CI_REGISTRY_IMAGE}:${RSYNC_VERSION%-*}.${CI_PIPELINE_IID}+alpine${ALPINE_VERSION}" --destination="${DOCKER_HUB_IMAGE}:${RSYNC_VERSION%-*}.${CI_PIPELINE_IID}+alpine${ALPINE_VERSION}" --dockerfile="${CI_PROJECT_DIR}/Dockerfile"
  - echo "Successfully published new image ${CI_REGISTRY_IMAGE}:${RSYNC_VERSION%-*}.${CI_PIPELINE_IID}+alpine${ALPINE_VERSION}"
  - echo "Successfully published new image ${DOCKER_HUB_IMAGE}:${RSYNC_VERSION%-*}.${CI_PIPELINE_IID}+alpine${ALPINE_VERSION}"
  stage: build
  tags:
  - kubernetes
